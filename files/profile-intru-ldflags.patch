From d909c7007472f59bd4a339ac933d14a5f41f4a7c Mon Sep 17 00:00:00 2001
From: Joey Riches <josephriches@gmail.com>
Date: Fri, 26 Jul 2019 11:08:54 +0100
Subject: [PATCH] Profile instrumentation flags must also be added to LDFLAGS

Both GCC and Clang documentation states that instrumentation flags
must be used both when compiling and linking with instrumentation.
Previously some packages failed to build with PGO with errors similar
to this;

undefined reference to `__gcov_time_profiler_counter'

A poor workaround was to add `-lgcov` to LDFLAGS, however, this was much
slower and gave poorer optimization than by simply passing instrumentation
flags to the linker.

It is not neccessary pass PGO use flags to the linker.

This fixes PGO'ing: R, chromium, notepadqq and a bunch of other packages.

Signed-off-by: Joey Riches <josephriches@gmail.com>
---
 ypkg2/ypkgcontext.py | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/ypkg2/ypkgcontext.py b/ypkg2/ypkgcontext.py
index 93ef109d..a02b03e0 100644
--- a/ypkg2/ypkgcontext.py
+++ b/ypkg2/ypkgcontext.py
@@ -423,6 +423,9 @@ def enable_pgo_generate(self):
         self.build.cxxflags = Flags.pgo_gen_flags(self.build.cxxflags,
                                                   pgo_dir,
                                                   self.spec.pkg_clang)
+        self.build.ldflags = Flags.pgo_gen_flags(self.build.ldflags,
+                                                  pgo_dir,
+                                                  self.spec.pkg_clang)
 
     def enable_pgo_use(self):
         """ Enable PGO use step """
