From 389561a07e9b2ceba465b830ad7013851e35f5b3 Mon Sep 17 00:00:00 2001
From: Ikey Doherty <ikey@solus-project.com>
Date: Fri, 15 May 2015 18:33:23 +0100
Subject: [PATCH 2/2] Enable optional extraction, export relevant helper macros

---
 build.py  | 14 ++++++++++++--
 sanity.py | 14 ++++++++++++++
 ypkg.py   | 11 +++++++++--
 3 files changed, 35 insertions(+), 4 deletions(-)

diff --git a/build.py b/build.py
index ed74cb0..6f83ef7 100644
--- a/build.py
+++ b/build.py
@@ -18,6 +18,8 @@ import sys
 import subprocess
 import hashlib
 
+import sanity
+
 import pisi.config
 conf = pisi.config.Config()
 
@@ -76,6 +78,7 @@ def get_path():
 def escape(inp, wdir, name):
     global host
     global arch
+    global BallDir
     cxxflags = conf.values.build.cxxflags
     cflags = conf.values.build.cflags
     ldflags = conf.values.build.ldflags
@@ -131,6 +134,10 @@ def escape(inp, wdir, name):
     macros["%JOBS%"] = conf.values.build.jobs
     macros["%make"] = "make %JOBS%"
     macros["%patch"] = "patch -t --remove-empty-files --no-backup-if-mismatch"
+    macros["%package%"] = sanity.name
+    macros["%version%"] = sanity.version
+    macros["%release%"] = sanity.release
+    macros["%sources%"] = BallDir
 
     # We like clang
     if Clang:
@@ -159,6 +166,10 @@ export CXX="%%CXX%%"
 export PATH="%s"
 export srcdir="%%workdir%%"
 export installdir="%%installroot%%"
+export package="%%package%%"
+export release="%%release%%"
+export version="%%version%%"
+export sources="%%sources%%"
 """ % get_path()
     if emul32:
         header += "\nexport EMUL32BUILD=1\n"
@@ -245,7 +256,6 @@ def fetch_source(sources):
 def extract(src_list):
     if not os.path.exists(BuildDir):
         os.makedirs(BuildDir)
-    print src_list
 
     for x in src_list:
         target = os.path.join(BallDir, os.path.basename(x))
@@ -259,7 +269,7 @@ def get_work_dir():
     if len(kids) > 1:
         return BuildDir
     else:
-        return os.path.join(BuildDir, kids[0])
+        return os.path.join(BuildDir, kids[0] if len(kids) > 0 else BuildDir)
 
 def get_pkgfiles_dir():
     dirn = os.path.dirname(pkgfile)
diff --git a/sanity.py b/sanity.py
index aaedb1d..cb1ab8b 100644
--- a/sanity.py
+++ b/sanity.py
@@ -46,6 +46,13 @@ pkg_patterns = None
 global pkg_strip
 pkg_strip = True
 
+global pkg_extract
+pkg_extract = True
+
+global release
+global version
+global name
+
 def init_mutations():
     global mutations
 
@@ -314,6 +321,10 @@ def sane(fpath):
     assertGetString(y, "summary")
     assertGetInteger(y, "release")
 
+    global version 
+    global release
+    release = str(assertGetInteger(y, "release"))
+    version = str(v) 
 
     global name
     name = y['name']
@@ -324,6 +335,9 @@ def sane(fpath):
     if "strip" in y:
         global pkg_strip
         pkg_strip = bool(y['strip'])
+    if "extract" in y:
+        global pkg_extract
+        pkg_extract = bool(y['extract'])
 
     if not "source" in y:
         print "Required list '%s' is missing" % "source"
diff --git a/ypkg.py b/ypkg.py
index 6c21d97..f6f766c 100755
--- a/ypkg.py
+++ b/ypkg.py
@@ -83,8 +83,15 @@ def main():
     build.cleanup()
     sources = sanity.get_sources()
     tars = build.fetch_source(sources)
-    build.extract(tars)
-
+    if sanity.pkg_extract:
+        build.extract(tars)
+    else:
+        try:
+            if not os.path.exists(build.BuildDir):
+                os.makedirs(build.BuildDir)
+        except Exception, e:
+            print "Unable to create build directory: %s" % e
+            return 1
     try:
         build.build(fpath)
         if sanity.emul32:
-- 
2.3.2

