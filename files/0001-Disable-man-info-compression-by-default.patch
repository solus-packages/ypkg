From d03fc8668116b9a681a19f164ee055e35a1bafec Mon Sep 17 00:00:00 2001
From: Joey Riches <josephriches@gmail.com>
Date: Mon, 13 Jun 2022 21:27:05 +0100
Subject: [PATCH 1/1] Disable man/info compression by default

Due to it generally increasing eopkg file sizes. Looks like xz
is having a hard time further compressing pre-compressed gzip files.
---
 man/package.yml.5      |  6 ++++-
 man/package.yml.5.html | 12 +++++++++-
 man/package.yml.5.md   |  9 ++++++++
 ypkg2/main.py          | 51 ++++++++++++++++++++++--------------------
 ypkg2/ypkgspec.py      |  2 ++
 5 files changed, 54 insertions(+), 26 deletions(-)

diff --git a/man/package.yml.5 b/man/package.yml.5
index 30d370c..f1a838d 100644
--- a/man/package.yml.5
+++ b/man/package.yml.5
@@ -1,6 +1,6 @@
 .\" generated with Ronn-NG/v0.9.1
 .\" http://github.com/apjanke/ronn-ng/tree/0.9.1
-.TH "PACKAGE\.YML" "5" "May 2022" ""
+.TH "PACKAGE\.YML" "5" "June 2022" ""
 .SH "NAME"
 \fBpackage\.yml\fR \- Solus package build format
 .SH "SYNOPSIS"
@@ -184,6 +184,10 @@ By default, this key is enabled, and will result in \fB*\.la\fR libtool files be
 .IP
 If in doubt, omit this option where possible\.
 .IP "\[ci]" 4
+\fBmancompress\fR [boolean]
+.IP
+By default, this key is disabled\. Enables compression of man/info pages using gzip at the maximum compression level, to decrease the installed size of the package on disk\. Disabled by default as it generally increases the size of eopkg file(s) due to xz having a hard time compressing pre\-compressed gzip files\. Only enable when it significantly reduces the installed size of a package on disk without sacrificing eopkg size too much\.
+.IP "\[ci]" 4
 \fBdebug\fR [boolean]
 .IP
 By default, this key is enabled, and as a result \fBypkg\-build(1)\fR will automatically create resulting \fB\-dbginfo\fR packages where it can\.
diff --git a/man/package.yml.5.html b/man/package.yml.5.html
index 05f6ee2..2472bbc 100644
--- a/man/package.yml.5.html
+++ b/man/package.yml.5.html
@@ -389,6 +389,16 @@ additional functionality.</p>
 
     <p>If in doubt, omit this option where possible.</p>
   </li>
+  <li>
+    <p><code>mancompress</code> [boolean]</p>
+
+    <p>By default, this key is disabled. Enables compression of man/info pages
+  using gzip at the maximum compression level, to decrease the installed
+  size of the package on disk. Disabled by default as it generally increases the
+  size of eopkg file(s) due to xz having a hard time compressing pre-compressed
+  gzip files. Only enable when it significantly reduces the installed
+  size of a package on disk without sacrificing eopkg size too much.</p>
+  </li>
   <li>
     <p><code>debug</code> [boolean]</p>
 
@@ -647,7 +657,7 @@ builddeps:
 
   <ol class='man-decor man-foot man foot'>
     <li class='tl'></li>
-    <li class='tc'>May 2022</li>
+    <li class='tc'>June 2022</li>
     <li class='tr'>package.yml(5)</li>
   </ol>
 
diff --git a/man/package.yml.5.md b/man/package.yml.5.md
index 01b0eb7..5cf6976 100644
--- a/man/package.yml.5.md
+++ b/man/package.yml.5.md
@@ -283,6 +283,15 @@ additional functionality.
 
     If in doubt, omit this option where possible.
 
+* `mancompress` [boolean]
+
+    By default, this key is disabled. Enables compression of man/info pages
+    using gzip at the maximum compression level, to decrease the installed
+    size of the package on disk. Disabled by default as it generally increases the
+    size of eopkg file(s) due to xz having a hard time compressing pre-compressed
+    gzip files. Only enable when it significantly reduces the installed
+    size of a package on disk without sacrificing eopkg size too much.
+
 * `debug` [boolean]
 
     By default, this key is enabled, and as a result `ypkg-build(1)` will
diff --git a/ypkg2/main.py b/ypkg2/main.py
index da52c8f..16cf00a 100644
--- a/ypkg2/main.py
+++ b/ypkg2/main.py
@@ -375,32 +375,35 @@ def build_package(filename, outputDir):
             sys.exit(1)
 
     # Compress manpage files
-    man_dirs = [
-        "{}/usr/share/man".format(ctx.get_install_dir()),
-        "{}/usr/man".format(ctx.get_install_dir()),
-    ]
-    for dir in man_dirs:
-        if not os.path.exists(dir):
-            continue
+    # NOTE: Off by default for now due to xz having a hard time furthur compressing gzip files
+    # leading to increased .eopkg sizes
+    if context.spec.pkg_mancompress:
+        man_dirs = [
+            "{}/usr/share/man".format(ctx.get_install_dir()),
+            "{}/usr/man".format(ctx.get_install_dir()),
+        ]
+        for dir in man_dirs:
+            if not os.path.exists(dir):
+                continue
 
-        console_ui.emit_info("Man", "Compressing manpages in '{}'...".format(dir))
-        try:
-            (compressed, saved) = compress_man_pages(dir)
-            console_ui.emit_success("Man", "Compressed {} file(s), saving {}".format(compressed, humanize(saved)))
-        except Exception as e:
-            console_ui.emit_warning("Man", "Failed to compress man pages in '{}'".format(dir))
-            print(e)
+            console_ui.emit_info("Man", "Compressing manpages in '{}'...".format(dir))
+            try:
+                (compressed, saved) = compress_man_pages(dir)
+                console_ui.emit_success("Man", "Compressed {} file(s), saving {}".format(compressed, humanize(saved)))
+            except Exception as e:
+                console_ui.emit_warning("Man", "Failed to compress man pages in '{}'".format(dir))
+                print(e)
     
-    # Now try to compress any info pages
-    info_dir = "{}/usr/share/info".format(ctx.get_install_dir())
-    if os.path.exists(info_dir):
-        console_ui.emit_info("Man", "Compressing info pages...")
-        try:
-            (compressed, saved) = compress_info_pages(info_dir)
-            console_ui.emit_success("Man", "Compressed {} file(s), saving {}".format(compressed, humanize(saved)))
-        except Exception as e:
-            console_ui.emit_warning("Man", "Failed to compress info pages")
-            print(e)
+        # Now try to compress any info pages
+        info_dir = "{}/usr/share/info".format(ctx.get_install_dir())
+        if os.path.exists(info_dir):
+            console_ui.emit_info("Man", "Compressing info pages...")
+            try:
+                (compressed, saved) = compress_info_pages(info_dir)
+                console_ui.emit_success("Man", "Compressed {} file(s), saving {}".format(compressed, humanize(saved)))
+            except Exception as e:
+                console_ui.emit_warning("Man", "Failed to compress info pages")
+                print(e)
 
     # Add user patterns - each consecutive package has higher priority than the
     # package before it, ensuring correct levels of control
diff --git a/ypkg2/ypkgspec.py b/ypkg2/ypkgspec.py
index 5d93d14..7869921 100644
--- a/ypkg2/ypkgspec.py
+++ b/ypkg2/ypkgspec.py
@@ -91,6 +91,7 @@ class YpkgSpec:
     pkg_clang = False
     pkg_strip = True
     pkg_lastrip = True
+    pkg_mancompress = False
     pkg_ccache = True
     pkg_emul32 = False
     pkg_avx2 = False
@@ -205,6 +206,7 @@ class YpkgSpec:
             ("debug", bool),
             ("strip", bool),
             ("lastrip", bool),
+            ("mancompress", bool),
             ("ccache", bool),
             ("emul32", bool),
             ("networking", bool),
-- 
2.35.3

