From a75ae2a0018a3cec558901ebb6dd5569f763b5c8 Mon Sep 17 00:00:00 2001
From: Ikey Doherty <ikey@solus-project.com>
Date: Sun, 18 Jun 2017 12:21:42 +0100
Subject: [PATCH 4/4] examine: Ensure we account for private dependencies in
 pkgconfig scan

We sometimes end up missing our pkgconfig dependencies due to private
requires not being met in the pkgconfig calculations. To mitigate this
we ensure pkg-config knows about all potential pkgconfigs within the
package as well as the appropriate host-side pkgconfigs, so that full
pkg-config dependencies are mapped out for cases such as mutter, which
has private-dep requirements.

Signed-off-by: Ikey Doherty <ikey@solus-project.com>
---
 ypkg2/examine.py | 18 +++++++++++++++++-
 1 file changed, 17 insertions(+), 1 deletion(-)

diff --git a/ypkg2/examine.py b/ypkg2/examine.py
index f346b96..9fa03a0 100644
--- a/ypkg2/examine.py
+++ b/ypkg2/examine.py
@@ -116,8 +116,24 @@ class FileReport:
 
     def scan_pkgconfig(self, file):
         sub = ""
+        pcDir = os.path.dirname(file)
+        pcPaths = []
+        # Ensure we account for private pkgconfig deps too
         if self.emul32:
-            sub = "PKG_CONFIG_PATH=\"{}\" ".format(EMUL32PC)
+            pcPaths.append(os.path.join(pcDir, "../lib32/pkgconfig"))
+            pcPaths.append(EMUL32PC)
+        else:
+            pcPaths.append(os.path.join(pcDir, "../lib64/pkgconfig"))
+            pcPaths.append(os.path.join(pcDir, "../lib/pkgconfig"))
+        pcPaths.append(os.path.join(pcDir, "../share/pkgconfig"))
+        pkgConfigPaths = []
+        for path in pcPaths:
+            p = os.path.realpath(path)
+            if p and os.path.exists(p) and p not in pkgConfigPaths:
+                pkgConfigPaths.append(p)
+
+        if len(pcPaths) > 0:
+            sub = "PKG_CONFIG_PATH=\"{}\" ".format(":".join(pkgConfigPaths))
 
         cmds = [
             "LC_ALL=C {}pkg-config --print-requires \"{}\"",
-- 
2.13.1

